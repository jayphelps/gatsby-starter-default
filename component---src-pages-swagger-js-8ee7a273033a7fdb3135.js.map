{"version":3,"sources":["webpack:///./src/pages/swagger.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./node_modules/regenerator-runtime/runtime-module.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js"],"names":["SwaggerPage","swaggerRef","react__WEBPACK_IMPORTED_MODULE_8___default","a","createRef","componentDidMount","Promise","all","__webpack_require__","e","then","t","bind","SwaggerUI","default","domNode","this","current","url","render","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_10__","ref","Component","__webpack_exports__","r","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","createContext","props","Consumer","staticQueryData","data","query","children","Error","propTypes","object","string","isRequired","func","m","module","exports","ProdPageRenderer","_ref","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_4__","getResourcesForPathnameSync","pathname","react__WEBPACK_IMPORTED_MODULE_1___default","_page_renderer__WEBPACK_IMPORTED_MODULE_3__","Object","assign","key","json","prop_types__WEBPACK_IMPORTED_MODULE_2___default","shape","header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","layout_Layout","Fragment","Helmet_default","title","site","siteMetadata","meta","name","content","lang","paddingTop","_755544856","prop_types_default","node","g","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","undefined","global","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","call","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","self","tryLocsList","iter","next","result","done","value","toString","keys","push","reverse","length","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","stop","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","i","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","obj","err","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","unwrapped","return","TypeError","info","pushTryEntry","locs","iteratorMethod","asyncGeneratorStep","gen","_next","_throw","error","args","arguments","apply"],"mappings":"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","file":"component---src-pages-swagger-js-8ee7a273033a7fdb3135.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Layout from '../components/layout';\n\nclass SwaggerPage extends React.Component {\n  swaggerRef = React.createRef();\n\n  async componentDidMount() {\n    // swagger-ui doesn't work in SSR. In fact if you even\n    // import it server-side it throws errors.\n    const [{ default: SwaggerUI }, _] = await Promise.all([\n      import('swagger-ui'),\n      import('swagger-ui/dist/swagger-ui.css')\n    ]);\n\n    SwaggerUI({\n      domNode: this.swaggerRef.current,\n      url: 'https://petstore.swagger.io/v2/swagger.json'\n    })\n  }\n\n  render() {\n    return (\n      <Layout>\n        <div ref={this.swaggerRef} />\n      </Layout>\n    )\n  }\n}\n\nexport default SwaggerPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    key: location.pathname,\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: 'rebeccapurple',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;"],"sourceRoot":""}